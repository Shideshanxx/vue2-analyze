{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/codegen.js","../src/compiler/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/util/index.js","../src/vdom/index.js","../src/util/next-tick.js","../src/render.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\r\n    return typeof val === 'function'\r\n}\r\n\r\nexport function isObject(val) {\r\n    return typeof val === 'object' && val !== null\r\n}","// arrayMethods是继承自Array.prototype，不直接修改Array.prototype，不污染Array.prototype\r\nlet oldArrayPrototype = Array.prototype\r\nexport let arrayMethods = Object.create(oldArrayPrototype)\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'unshift',\r\n    'shift',\r\n    'sort',\r\n    'reverse',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function(...args) {\r\n        const result = oldArrayPrototype[method].call(this,...args) // this指向调用该方法的data（即经过响应式处理的数组）\r\n\r\n        // 对于数组中新增的元素，也需要进行监控\r\n        const ob = this.__ob__;\r\n        let inserted;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case \"splice\":\r\n                inserted = args.slice(2);\r\n            default:\r\n                break;\r\n        }\r\n        // inserted是个数组，需要调用observeArray来监测\r\n        if (inserted) ob.observeArray(inserted);\r\n        return result\r\n    }\r\n})","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n/**\r\n * 数据劫持：\r\n * 1. 如果是对象，则递归对象所有属性，进行劫持\r\n * 2. 如果数组，则会劫持数组方法（方法中如果是新增元素，会劫持新增元素），并对数组中类型为数组/对象的元素进行劫持\r\n */\r\n\r\nclass Observer {\r\n  // 通过new命令生成class实例时，会自动调用constructor()，即会执行this.walk(data)方法\r\n  constructor(data) {\r\n    // 在数据data上新增属性 data.__ob__；指向经过new Observer(data)创建的实例，可以访问Observer.prototype上的方法observeArray、walk等\r\n    // 所有被劫持过的数据都有__ob__属性（通过这个属性可以判断数据是否被检测过）\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      //  值指代的就是Observer的实例\r\n      value: this,\r\n      //  设为不可枚举，防止在forEach对每一项响应式的时候监控__ob__，造成死循环\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true,\r\n    });\r\n\r\n    /**\r\n     * 思考一下数组如何进行响应式？\r\n     * 和对象一样，对每一个属性进行代理吗？\r\n     * 如果数组长度为10000，给每一项设置代理，性能非常差！\r\n     * 用户很少通过索引操作数组，我们只需要重写数组的原型方法，在方法中进行响应式即可。\r\n     */\r\n    if (Array.isArray(data)) {\r\n      // 数组响应式处理\r\n\r\n      // 重写数组的原型方法，将data原型指向重写后的对象\r\n      data.__proto__ = arrayMethods;\r\n\r\n      // 如果数组中的数据是对象，需要监控对象的变化\r\n      this.observeArray(data);\r\n    } else {\r\n      // 对象响应式处理\r\n      this.walk(data);\r\n    }\r\n  }\r\n  observeArray(data) {\r\n    // 【关键】递归了，监控数组每一项（observe会筛选出对象和数组，其他的不监控）的改变，数组长度很长的话，会影响性能\r\n    // 【*********】数组并没有对索引进行监控，但是对数组的原型方法进行了改写，还对每一项（数组和对象类型）进行了监控\r\n    data.forEach((item) => {\r\n      observe(item);\r\n    });\r\n  }\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => {\r\n      // 对data中的每个属性进行响应式处理\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n  observe(value); // 【关键】递归，劫持对象中所有层级的所有属性\r\n  // 如果Vue数据嵌套层级过深 >> 性能会受影响【******************************】\r\n\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      // todo...收集依赖\r\n      return value;\r\n    },\r\n    set(newVal) {\r\n      // 对新数据进行观察\r\n      observe(newVal);\r\n      value = newVal;\r\n      // todo...更新视图\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 如果是object类型（对象或数组）才观测；第一次调用observe(vm.$options._data)时，_data一定是个对象，官方要求的写法（data函数返回一个对象）\r\n  if (!isObject(data)) {\r\n    return;\r\n  }\r\n  // 如果已经是响应式的数据，直接return\r\n  if (data.__ob__) {\r\n    return;\r\n  }\r\n  // 返回经过响应式处理之后的data\r\n  return new Observer(data);\r\n}\r\n","/**\r\n * 数据初始化：initProps、initMethod、initData、initComputed、initWatch\r\n */\r\n\r\nimport { observe } from \"./observer/index\";\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.props) {\r\n    initProps(vm);\r\n  }\r\n  if (opts.methods) {\r\n    initMethod(vm);\r\n  }\r\n  if (opts.data) {\r\n    // 初始化data\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm);\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n\r\n  function initProps() {}\r\n  function initMethod() {}\r\n  function initData(vm) {\r\n    let data = vm.$options.data;\r\n    // 往实例上添加一个属性 _data，即传入的data\r\n    // vue组件data推荐使用函数 防止数据在组件之间共享\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n    // 将vm._data上的所有属性代理到 vm 上\r\n    for (let key in data) {\r\n      proxy(vm, \"_data\", key);\r\n    }\r\n    // 对数据进行观测 -- 数据响应式\r\n    observe(data);\r\n  }\r\n  function initComputed() {}\r\n  function initWatch() {}\r\n\r\n  // 将vm._data上的属性代理到 vm 上\r\n  function proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n      get() {\r\n        return vm[source][key];\r\n      },\r\n      set(newValue) {\r\n        vm[source][key] = newValue;\r\n      },\r\n    });\r\n  }\r\n}\r\n","// 以下为vue源码的正则\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //匹配标签名；形如 abc-123\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //匹配特殊标签;形如 abc:234,前面的abc:可有可无；获取标签名；\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配标签开头；形如  <  ；捕获里面的标签名\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结尾，形如 >、/>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配结束标签 如 </abc-123> 捕获里面的标签名\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性  形如 id=\"app\"\r\n\r\nexport function parse(template) {\r\n  /**\r\n   * handleStartTag、handleEndTag、handleChars将初始解析的结果，组装成一个树结构。\r\n   * 使用栈结构构建AST树\r\n   */\r\n  let root; // 根节点\r\n  let currentParent; // 下一个子元素的父元素\r\n  let stack = []; // 栈结构；栈中push/pop元素节点，对于文本节点，直接push到currentParent.children即可，不用push到栈中\r\n  // 表示元素和文本的type\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  // 创建AST节点\r\n  function createASTElement(tagName, attrs) {\r\n    return {\r\n      tag: tagName,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n  // 对开始标签进行处理\r\n  function handleStartTag({ tagName, attrs }) {\r\n    let element = createASTElement(tagName, attrs);\r\n    // 如果没有根元素，则当前元素即为根元素\r\n    if (!root) {\r\n      root = element;\r\n    }\r\n    currentParent = element;\r\n    // 将元素放入栈中\r\n    stack.push(element);\r\n  }\r\n  // 对结束标签进行处理\r\n  function handleEndTag(tagName) {\r\n    // 处理到结束标签时，将该元素从栈中移出\r\n    let element = stack.pop();\r\n    if (element.tag !== tagName) {\r\n        throw new Error('标签名有误')\r\n    }\r\n    // currentParent此时为element的上一个元素\r\n    currentParent = stack[stack.length - 1];\r\n    // 建立parent和children关系\r\n    if (currentParent) {\r\n      element.parent = currentParent;\r\n      currentParent.children.push(element);\r\n    }\r\n  }\r\n  // 对文本进行处理\r\n  function handleChars(text) {\r\n    // 去掉空格\r\n    text = text.replace(/\\s/g, \"\");\r\n    if (text) {\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 递归解析template，进行初步处理\r\n   * 解析开始标签，将结果{tagName, attrs} 交给 handleStartTag 处理\r\n   * 解析结束标签，将结果 tagName 交给 handleEndTag 处理\r\n   * 解析文本门将结果 text 交给 handleChars 处理\r\n   */\r\n  while (template) {\r\n    // 查找 < 的位置，根据它的位置判断第一个元素是什么标签\r\n    let textEnd = template.indexOf(\"<\");\r\n\r\n    // 当第一个元素为 '<' 时，即碰到开始标签/结束标签时\r\n    if (textEnd === 0) {\r\n      // 匹配开始标签<div> 或 <image/>\r\n      const startTagMatch = parseStartTag();\r\n      if (startTagMatch) {\r\n        handleStartTag(startTagMatch);\r\n        continue; // continue 表示跳出本次循环，进入下一次循环\r\n      }\r\n\r\n      // 匹配结束标签</div>\r\n      const endTagMatch = template.match(endTag);\r\n      if (endTagMatch) {\r\n        // endTagMatch如果匹配成功，其格式为数组：['</div>', 'div']\r\n        advance(endTagMatch[0].length);\r\n        handleEndTag(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    // 当第一个元素不是'<'，即第一个元素是文本时\r\n    let text;\r\n    if (textEnd >= 0) {\r\n      // 获取文本\r\n      text = template.substring(0, textEnd);\r\n    }\r\n    if (text) {\r\n      advance(text.length);\r\n      handleChars(text);\r\n    }\r\n  }\r\n\r\n  // 解析开始标签\r\n  function parseStartTag() {\r\n    // 1. 匹配开始标签\r\n    const start = template.match(startTagOpen);\r\n    // start格式为数组，形如 ['<div', 'div']；第二项为标签名\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: [],\r\n      };\r\n\r\n      //匹配到了开始标签，就把 <tagname 截取掉，往后继续匹配属性\r\n      advance(start[0].length);\r\n\r\n      // 2. 开始递归匹配标签属性\r\n      // end代表结束符号 > ；如果匹配成功，格式为：['>', '']\r\n      // attr 表示匹配的属性\r\n      let end, attr;\r\n      // 不是标签结尾，并且能匹配到属性时\r\n      while (\r\n        !(end = template.match(startTagClose)) &&\r\n        (attr = template.match(attribute))\r\n      ) {\r\n        // attr如果匹配成功，也是一个数组，格式为：[\"class=\\\"myClass\\\"\", \"class\", \"=\", \"myClass\", undefined, undefined]\r\n        // attr[1]为属性名，attr[3]/attr[4]/attr[5]为属性值，取决于属性定义是双引号/单引号/无引号\r\n\r\n        // 匹配成功一个属性，就在template上截取掉该属性，继续往后匹配\r\n        advance(attr[0].length);\r\n        attr = {\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5], //这里是因为正则捕获支持双引号（） 单引号 和无引号的属性值\r\n        };\r\n        match.attrs.push(attr);\r\n      }\r\n\r\n      // 3. 匹配到开始标签结尾\r\n      if (end) {\r\n        //   代表一个标签匹配到结束的>了 代表开始标签解析完毕\r\n        advance(1);\r\n        return match;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 截取template字符串 每次匹配到了就【往前继续匹配】\r\n  function advance(n) {\r\n    template = template.substring(n);\r\n  }\r\n\r\n  // 返回生成的ast；root包含整个树状结构信息\r\n  return root;\r\n}\r\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配花括号 {{  }}；捕获花括号里面的内容\r\nfunction gen(node) {\r\n  // 如果是元素类型\r\n  if (node.type == 1) {\r\n    // 【关键】递归创建\r\n    return generate(node);\r\n  } else {\r\n    // else即文本类型\r\n    let text = node.text;\r\n\r\n    // 1. 如果text中不存在花括号变量表达式\r\n    if (!defaultTagRE.test(text)) {\r\n      // _v表示创建文本\r\n      return `_v(${JSON.stringify(text)})`;\r\n    }\r\n\r\n    // 正则是全局模式 每次需要重置正则的lastIndex属性，不然会引发匹配bug（defaultTagRE.exec()匹配完一次后，再次匹配为null，需要重置lastIndex）\r\n    let lastIndex = (defaultTagRE.lastIndex = 0);\r\n    let tokens = [];\r\n    let match, index;\r\n\r\n    // 2. 如果text中存在花括号变量（使用while循环，是因为可能存在多个{{变量}}）\r\n    while ((match = defaultTagRE.exec(text))) {\r\n      // match如果匹配成功，其结构为：['{{myValue}}', 'myValue', index: indexof({) ]\r\n      // index代表匹配到的位置\r\n      index = match.index;\r\n      // 初始 lastIndex 为0，index > lastIndex 表示在{{ 前有普通文本\r\n      if (index > lastIndex) {\r\n        // 在tokens里面放入 {{ 之前的普通文本\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n      }\r\n      // tokens中放入捕获到的变量内容\r\n      tokens.push(`_s(${match[1].trim()})`);\r\n      // 匹配指针后移，移到 }} 后面\r\n      lastIndex = index + match[0].length;\r\n    }\r\n\r\n    // 3. 如果匹配完了花括号，text里面还有剩余的普通文本，那么继续push\r\n    if (lastIndex < text.length) {\r\n      tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n    }\r\n    // _v表示创建文本\r\n    return `_v(${tokens.join(\"+\")})`;\r\n  }\r\n}\r\n\r\n// 生成子节点：遍历children调用gen(item)，使用逗号拼接每一项的结果\r\nfunction getChildren(el) {\r\n  const children = el.children;\r\n  if (children) {\r\n    return `${children.map((c) => gen(c)).join(\",\")}`;\r\n  }\r\n}\r\n\r\n// 处理attrs/props属性：将[{name: 'class', value: 'home'}, {name: 'style', value: \"font-size:12px;color:red\"}]\r\n//                  转化成 \"class:\"home\",style:{\"font-size\":\"12px\",\"color\":\"red\"}\"\r\nfunction genProps(attrs) {\r\n  let str = \"\";\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    // 对attrs属性里面的style做特殊处理\r\n    if (attr.name === \"style\") {\r\n      let obj = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        let [key, value] = item.split(\":\");\r\n        obj[key] = value;\r\n      });\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\nexport function generate(ast) {\r\n  let children = getChildren(ast);\r\n\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length ? `${genProps(ast.attrs)}` : \"undefined\"\r\n  }${children ? `,${children}` : \"\"})`;\r\n\r\n  return code;\r\n}\r\n","import { parse } from \"./parse\";\r\nimport { generate } from \"./codegen\";\r\nexport function compileToFunctions(template) {\r\n  // 1. 把template转成AST语法树；AST用来描述代码本身形成树结构，不仅可以描述html，也能描述css以及js语法\r\n  let ast = parse(template);\r\n  console.log(\"AST\", ast);\r\n  // 2. 优化静态节点\r\n  // 这个有兴趣的可以去看源码  不影响核心功能就不实现了\r\n  //   if (options.optimize !== false) {\r\n  //     optimize(ast, options);\r\n  //   }\r\n\r\n  // 3. 通过ast，重新生成代码\r\n  // 我们最后生成的代码需要和render函数一样\r\n  // 类似_c('div',{id:\"app\"},_c('div',undefined,_v(\"hello\"+_s(name)),_c('span',undefined,_v(\"world\"))))\r\n  // _c代表创建元素 _v代表创建文本 _s代表文Json.stringify--把对象解析成文本\r\n  let code = generate(ast);\r\n  console.log(\"code\", code);\r\n  \r\n  // 通过new Function生成函数\r\n  let renderFn = new Function(`with(this){return ${code}}`);\r\n  return renderFn;\r\n}\r\n","export function patch() {}","import { patch } from \"./vdom/patch\";\r\n// import Watcher from \"./observer/watcher\";\r\n\r\nexport function lifecycleMixin(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this;\r\n    const prevVnode = vm?._vnode; // 保留上一次的vnode\r\n    vm._vnode = vnode; // 获取本次的vnode\r\n    if (!prevVnode) {\r\n      // patch是渲染vnode为真实dom核心\r\n      vm.$el = patch(vm.$el, vnode); // 初次渲染 vm._vnode肯定不存在 要通过虚拟节点 渲染出真实的dom 赋值给$el属性\r\n    } else {\r\n      vm.$el = patch(prevVnode, vnode); // 更新时把上次的vnode和这次更新的vnode穿进去 进行diff算法\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 1. 调用render方法，生成虚拟DOM —— 即执行 vm._render()\r\n * 2. 将VNode渲染成真实DOM —— 即执行 vm._update(VNode)\r\n */\r\nexport function mountComponent(vm, el) {\r\n  vm.$el = el;\r\n  // 执行beforeMount生命周期钩子\r\n  callHook(vm, \"beforeMount\");\r\n\r\n  let updateComponent = () => {\r\n    vm._update(vm._render());\r\n  };\r\n  updateComponent();\r\n  //   new Watcher(\r\n  //     vm,\r\n  //     updateComponent,\r\n  //     () => {\r\n  //       callHook(vm, \"beforeUpdate\");\r\n  //     },\r\n  //     true\r\n  //   );\r\n  callHook(vm, \"mounted\");\r\n}\r\n\r\nexport function callHook(vm, hook) {\r\n  // 依次执行生命周期对应的方法\r\n  const handlers = vm.$options[hook];\r\n  if (handlers) {\r\n    for (let i = 0; i < handlers.length; i++) {\r\n      handlers[i].call(vm); //生命周期里面的this指向当前实例\r\n    }\r\n  }\r\n}\r\n","/**\r\n * initMixin\r\n * 表示在vue的基础上做一次混合操作\r\n */\r\nimport { initState } from \"./state\";\r\nimport { compileToFunctions } from './compiler/index'\r\nimport { callHook, mountComponent } from './lifecycle'\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // this指向实例\r\n    const vm = this;\r\n    vm.$options = options; // 后面会对options进行扩展\r\n    callHook(vm, \"beforeCreate\");\r\n    \r\n    // 初始化状态，包括initProps、initMethod、initData、initComputed、initWatch等\r\n    initState(vm);\r\n\r\n    callHook(vm, \"created\");\r\n    // 如果有el属性 进行模板渲染\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    // $mount 由vue实例调用，所以this指向vue实例\r\n    const vm = this;\r\n    const options = vm.$options;\r\n    el = document.querySelector(el);\r\n\r\n    /**\r\n     * 1. 把模板转化成render函数\r\n     * 2. 执行render函数，生成VNode\r\n     * 3. 更新时进行diff\r\n     * 4. 产生真实DOM\r\n     */\r\n    // 可以直接在options中写render函数，它的优先级比template高\r\n    if (!options.render) {\r\n      let template = options.template;\r\n\r\n      // 如果不存在render和template但是存在el属性，则直接将template赋值为el元素\r\n      if (!template && el) {\r\n        template = el.outerHTML;\r\n      }\r\n\r\n      // 最终需要把tempalte模板转化成render函数\r\n      if (template) {\r\n        // 将template转化成render函数\r\n        const render = compileToFunctions(template);\r\n        options.render = render;\r\n      }\r\n    }\r\n\r\n    // 调用render方法，渲染成真实DOM\r\n    // 组件挂载方法\r\n    return mountComponent(vm, el);\r\n  };\r\n}\r\n","// 判断val是否是对象/数组\r\nexport function isObject(val) {\r\n    return typeof val === 'object' && val !== null\r\n}\r\n\r\n// 判断tagName是否是普通标签\r\nexport function isReservedTag(tagName) {\r\n  // 定义常见标签\r\n  let str =\r\n    \"html,body,base,head,link,meta,style,title,\" +\r\n    \"address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,\" +\r\n    \"div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,\" +\r\n    \"a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,\" +\r\n    \"s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,\" +\r\n    \"embed,object,param,source,canvas,script,noscript,del,ins,\" +\r\n    \"caption,col,colgroup,table,thead,tbody,td,th,tr,\" +\r\n    \"button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,\" +\r\n    \"output,progress,select,textarea,\" +\r\n    \"details,dialog,menu,menuitem,summary,\" +\r\n    \"content,element,shadow,template,blockquote,iframe,tfoot\";\r\n  let obj = {};\r\n  str.split(\",\").forEach((tag) => {\r\n    obj[tag] = true;\r\n  });\r\n  return obj[tagName];\r\n}\r\n","import { isReservedTag } from \"../util/index\";\r\n\r\nexport default class Vnode {\r\n  /**\r\n   * @param {标签名} tag\r\n   * @param {属性} data\r\n   * @param {标签唯一的key} key\r\n   * @param {子节点} children\r\n   * @param {文本节点} text\r\n   * @param {组件节点的其他属性} componentOptions\r\n   */\r\n  constructor(tag, data, key, children, text, componentOptions) {\r\n    console.log(\r\n      \"🚀 ~ file: index.js ~ line 5 ~ Vnode ~ constructor ~ componentOptions\",\r\n      componentOptions\r\n    );\r\n    this.tag = tag;\r\n    this.data = data;\r\n    this.key = key;\r\n    this.children = children;\r\n    this.text = text;\r\n    this.componentOptions = componentOptions;\r\n  }\r\n}\r\n\r\n// 创建元素vnode\r\nexport function createElement(vm, tag, data = {}, ...children) {\r\n  let key = data.key;\r\n  // 如果是普通标签\r\n  if (isReservedTag(tag)) {\r\n    return new Vnode(tag, data, key, children);\r\n  } else {\r\n    // 否则就是组件\r\n    let Ctor = vm.$options.components[tag]; //获取组件的构造函数\r\n    return createComponent(vm, tag, data, key, children, Ctor);\r\n  }\r\n}\r\n\r\n// 组件处理\r\nfunction createComponent(vm, tag, data, key, children, Ctor) {\r\n  // todo...如果 _c(tag,...) 创建的是自定义组件，如何处理？\r\n  //   if (isObject(Ctor)) {\r\n  //     Ctor = vm.$options._base.extend(Ctor);\r\n  //   }\r\n}\r\n\r\n// 创建文本vnode\r\nexport function createTextNode(vm, text) {\r\n  return new Vnode(undefined, undefined, undefined, undefined, text);\r\n}\r\n","export function nextTick() {\r\n    console.log('nextTick')\r\n}","import { createElement, createTextNode } from \"./vdom/index\";\r\nimport { nextTick } from \"./util/next-tick\";\r\n\r\nexport function renderMixin(Vue) {\r\n  Vue.prototype._c = function (...args) {\r\n    // 创建虚拟dom元素\r\n    return createElement(this,...args);\r\n  };\r\n  Vue.prototype._v = function (text) {\r\n    // 创建虚拟dom文本\r\n    return createTextNode(this,text);\r\n  };\r\n  Vue.prototype._s = function (val) {\r\n    // 如果模板里面的是一个对象，需要JSON.stringify\r\n    return val == null\r\n      ? \"\"\r\n      : typeof val === \"object\"\r\n      ? JSON.stringify(val)\r\n      : val;\r\n  };\r\n\r\n  Vue.prototype._render = function () {\r\n    const vm = this;\r\n    // 获取模板编译生成的render方法\r\n    const { render } = vm.$options;\r\n    console.log(\"🚀 ~ file: render.js ~ line 28 ~ renderMixin ~ render\", render);\r\n    // 生成vnode--虚拟dom\r\n    const vnode = render.call(vm);\r\n    console.log(vnode)\r\n    return vnode;\r\n  };\r\n\r\n  // 挂载在原型的nextTick方法\r\n  Vue.prototype.$nextTick = nextTick;\r\n}\r\n","export function initGlobalApi(Vue) {\r\n    Vue.options._base = Vue; //_base是Vue的构造函数\r\n}","import { initMixin } from \"./init\"\r\nimport { lifecycleMixin } from './lifecycle'\r\nimport { renderMixin } from './render'\r\nimport { initGlobalApi } from './global-api/index'\r\n\r\nfunction Vue(options) {\r\n    // new Vue创建实例时会调用_init()方法\r\n    this._init(options)\r\n}\r\ninitMixin(Vue) // 在原型上挂载_init()（数据监控；props、events、computed、watch初始化等）、$mount()（compiler流程）方法\r\nlifecycleMixin(Vue) // 在原型上挂载 _update()方法（第一次创建dom及更新dom（有diff过程））\r\nrenderMixin(Vue)  //  在原型上挂载_c、_v、_s、$nextTick、_render()方法\r\ninitGlobalApi(Vue)\r\n\r\nexport default Vue"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","call","ob","__ob__","inserted","slice","observeArray","Observer","data","defineProperty","value","enumerable","writable","configurable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newVal","initState","vm","opts","$options","props","initData","computed","watch","_data","proxy","source","newValue","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","parse","template","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","handleStartTag","element","push","handleEndTag","pop","Error","length","handleChars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","start","end","attr","name","n","defaultTagRE","gen","node","generate","test","JSON","stringify","lastIndex","tokens","index","exec","trim","join","getChildren","el","map","c","genProps","str","i","obj","split","ast","code","compileToFunctions","console","log","renderFn","Function","patch","lifecycleMixin","Vue","_update","vnode","prevVnode","_vnode","$el","mountComponent","callHook","updateComponent","_render","hook","handlers","initMixin","_init","options","$mount","document","querySelector","render","outerHTML","isReservedTag","Vnode","componentOptions","createElement","components","createComponent","Ctor","createTextNode","undefined","nextTick","renderMixin","_c","_v","_s","$nextTick","initGlobalApi","_base"],"mappings":"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"}
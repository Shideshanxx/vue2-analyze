{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/codegen.js","../src/compiler/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\r\n    return typeof val === 'function'\r\n}\r\n\r\nexport function isObject(val) {\r\n    return typeof val === 'object' && val !== null\r\n}","// arrayMethods是继承自Array.prototype，不直接修改Array.prototype，不污染Array.prototype\r\nlet oldArrayPrototype = Array.prototype\r\nexport let arrayMethods = Object.create(oldArrayPrototype)\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'unshift',\r\n    'shift',\r\n    'sort',\r\n    'reverse',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function(...args) {\r\n        const result = oldArrayPrototype[method].call(this,...args) // this指向调用该方法的data（即经过响应式处理的数组）\r\n\r\n        // 对于数组中新增的元素，也需要进行监控\r\n        const ob = this.__ob__;\r\n        let inserted;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case \"splice\":\r\n                inserted = args.slice(2);\r\n            default:\r\n                break;\r\n        }\r\n        // inserted是个数组，需要调用observeArray来监测\r\n        if (inserted) ob.observeArray(inserted);\r\n        return result\r\n    }\r\n})","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n/**\r\n * 数据劫持：\r\n * 1. 如果是对象，则递归对象所有属性，进行劫持\r\n * 2. 如果数组，则会劫持数组方法（方法中如果是新增元素，会劫持新增元素），并对数组中类型为数组/对象的元素进行劫持\r\n */\r\n\r\nclass Observer {\r\n  // 通过new命令生成class实例时，会自动调用constructor()，即会执行this.walk(data)方法\r\n  constructor(data) {\r\n    // 在数据data上新增属性 data.__ob__；指向经过new Observer(data)创建的实例，可以访问Observer.prototype上的方法observeArray、walk等\r\n    // 所有被劫持过的数据都有__ob__属性（通过这个属性可以判断数据是否被检测过）\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      //  值指代的就是Observer的实例\r\n      value: this,\r\n      //  设为不可枚举，防止在forEach对每一项响应式的时候监控__ob__，造成死循环\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true,\r\n    });\r\n\r\n    /**\r\n     * 思考一下数组如何进行响应式？\r\n     * 和对象一样，对每一个属性进行代理吗？\r\n     * 如果数组长度为10000，给每一项设置代理，性能非常差！\r\n     * 用户很少通过索引操作数组，我们只需要重写数组的原型方法，在方法中进行响应式即可。\r\n     */\r\n    if (Array.isArray(data)) {\r\n      // 数组响应式处理\r\n\r\n      // 重写数组的原型方法，将data原型指向重写后的对象\r\n      data.__proto__ = arrayMethods;\r\n\r\n      // 如果数组中的数据是对象，需要监控对象的变化\r\n      this.observeArray(data);\r\n    } else {\r\n      // 对象响应式处理\r\n      this.walk(data);\r\n    }\r\n  }\r\n  observeArray(data) {\r\n    // 【关键】递归了，监控数组每一项（observe会筛选出对象和数组，其他的不监控）的改变，数组长度很长的话，会影响性能\r\n    // 【*********】数组并没有对索引进行监控，但是对数组的原型方法进行了改写，还对每一项（数组和对象类型）进行了监控\r\n    data.forEach((item) => {\r\n      observe(item);\r\n    });\r\n  }\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => {\r\n      // 对data中的每个属性进行响应式处理\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n  observe(value); // 【关键】递归，劫持对象中所有层级的所有属性\r\n  // 如果Vue数据嵌套层级过深 >> 性能会受影响【******************************】\r\n\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      // todo...收集依赖\r\n      return value;\r\n    },\r\n    set(newVal) {\r\n      // 对新数据进行观察\r\n      observe(newVal);\r\n      value = newVal;\r\n      // todo...更新视图\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 如果是object类型（对象或数组）才观测；第一次调用observe(vm.$options._data)时，_data一定是个对象，官方要求的写法（data函数返回一个对象）\r\n  if (!isObject(data)) {\r\n    return;\r\n  }\r\n  // 如果已经是响应式的数据，直接return\r\n  if (data.__ob__) {\r\n    return;\r\n  }\r\n  // 返回经过响应式处理之后的data\r\n  return new Observer(data);\r\n}\r\n","/**\r\n * 数据初始化：initProps、initMethod、initData、initComputed、initWatch\r\n */\r\n\r\nimport { observe } from \"./observer/index\";\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.props) {\r\n    initProps(vm);\r\n  }\r\n  if (opts.methods) {\r\n    initMethod(vm);\r\n  }\r\n  if (opts.data) {\r\n    // 初始化data\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm);\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n\r\n  function initProps() {}\r\n  function initMethod() {}\r\n  function initData(vm) {\r\n    let data = vm.$options.data;\r\n    // 往实例上添加一个属性 _data，即传入的data\r\n    // vue组件data推荐使用函数 防止数据在组件之间共享\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n    // 将vm._data上的所有属性代理到 vm 上\r\n    for (let key in data) {\r\n      proxy(vm, \"_data\", key);\r\n    }\r\n    // 对数据进行观测 -- 数据响应式\r\n    observe(data);\r\n  }\r\n  function initComputed() {}\r\n  function initWatch() {}\r\n\r\n  // 将vm._data上的属性代理到 vm 上\r\n  function proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n      get() {\r\n        return vm[source][key];\r\n      },\r\n      set(newValue) {\r\n        vm[source][key] = newValue;\r\n      },\r\n    });\r\n  }\r\n}\r\n","// 以下为vue源码的正则\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //匹配标签名；形如 abc-123\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //匹配特殊标签;形如 abc:234,前面的abc:可有可无；获取标签名；\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配标签开头；形如  <  ；捕获里面的标签名\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结尾，形如 >、/>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配结束标签 如 </abc-123> 捕获里面的标签名\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性  形如 id=\"app\"\r\n\r\nexport function parse(template) {\r\n  /**\r\n   * handleStartTag、handleEndTag、handleChars将初始解析的结果，组装成一个树结构。\r\n   * 使用栈结构构建树状结构\r\n   */\r\n  let root; // 根节点\r\n  let currentParent; // 下一个子元素的父元素\r\n  let stack = []; // 栈结构；栈中push/pop元素节点，对于文本节点，直接push到currentParent.children即可，不用push到栈中\r\n  // 表示元素和文本的type\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n\r\n  // 创建AST节点\r\n  function createASTElement(tagName, attrs) {\r\n    return {\r\n      tag: tagName,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n  // 对开始标签进行处理\r\n  function handleStartTag({ tagName, attrs }) {\r\n    let element = createASTElement(tagName, attrs);\r\n    // 如果没有根元素，则当前元素即为根元素\r\n    if (!root) {\r\n      root = element;\r\n    }\r\n    currentParent = element;\r\n    // 将元素放入栈中\r\n    stack.push(element);\r\n  }\r\n  // 对结束标签进行处理\r\n  function handleEndTag(tagName) {\r\n    // 处理到结束标签时，将该元素从栈中移出\r\n    let element = stack.pop();\r\n    // currentParent此时为element的上一个元素\r\n    currentParent = stack[stack.length - 1];\r\n    // 建立parent和children关系\r\n    if (currentParent) {\r\n      element.parent = currentParent;\r\n      currentParent.children.push(element);\r\n    }\r\n  }\r\n  // 对文本进行处理\r\n  function handleChars(text) {\r\n    // 去掉空格\r\n    text = text.replace(/\\s/g, \"\");\r\n    if (text) {\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 递归解析template，进行初步处理\r\n   * 解析开始标签，将结果{tagName, attrs} 交给 handleStartTag 处理\r\n   * 解析结束标签，将结果 tagName 交给 handleEndTag 处理\r\n   * 解析文本门将结果 text 交给 handleChars 处理\r\n   */\r\n  while (template) {\r\n    // 查找 < 的位置，根据它的位置判断第一个元素是什么标签\r\n    let textEnd = template.indexOf(\"<\");\r\n\r\n    // 当第一个元素为 '<' 时，即碰到开始标签/结束标签时\r\n    if (textEnd === 0) {\r\n      // 匹配开始标签<div> 或 <image/>\r\n      const startTagMatch = parseStartTag();\r\n      if (startTagMatch) {\r\n        handleStartTag(startTagMatch);\r\n        continue; // continue 表示跳出本次循环，进入下一次循环\r\n      }\r\n\r\n      // 匹配结束标签</div>\r\n      const endTagMatch = template.match(endTag);\r\n      if (endTagMatch) {\r\n        // endTagMatch如果匹配成功，其格式为数组：['</div>', 'div']\r\n        advance(endTagMatch[0].length);\r\n        handleEndTag(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    // 当第一个元素不是'<'，即第一个元素是文本时\r\n    let text;\r\n    if (textEnd >= 0) {\r\n      // 获取文本\r\n      text = template.substring(0, textEnd);\r\n    }\r\n    if (text) {\r\n      advance(text.length);\r\n      handleChars(text);\r\n    }\r\n  }\r\n\r\n  // 解析开始标签\r\n  function parseStartTag() {\r\n    // 1. 匹配开始标签\r\n    const start = template.match(startTagOpen);\r\n    // start格式为数组，形如 ['<div', 'div']；第二项为标签名\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: [],\r\n      };\r\n\r\n      //匹配到了开始标签，就把 <tagname 截取掉，往后继续匹配属性\r\n      advance(start[0].length);\r\n\r\n      // 2. 开始递归匹配标签属性\r\n      // end代表结束符号 > ；如果匹配成功，格式为：['>', '']\r\n      // attr 表示匹配的属性\r\n      let end, attr;\r\n      // 不是标签结尾，并且能匹配到属性时\r\n      while (\r\n        !(end = template.match(startTagClose)) &&\r\n        (attr = template.match(attribute))\r\n      ) {\r\n        // attr如果匹配成功，也是一个数组，格式为：[\"class=\\\"myClass\\\"\", \"class\", \"=\", \"myClass\", undefined, undefined]\r\n        // attr[1]为属性名，attr[3]/attr[4]/attr[5]为属性值，取决于属性定义是双引号/单引号/无引号\r\n\r\n        // 匹配成功一个属性，就在template上截取掉该属性，继续往后匹配\r\n        advance(attr[0].length);\r\n        attr = {\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5], //这里是因为正则捕获支持双引号（） 单引号 和无引号的属性值\r\n        };\r\n        match.attrs.push(attr);\r\n      }\r\n\r\n      // 3. 匹配到开始标签结尾\r\n      if (end) {\r\n        //   代表一个标签匹配到结束的>了 代表开始标签解析完毕\r\n        advance(1);\r\n        return match;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 截取template字符串 每次匹配到了就【往前继续匹配】\r\n  function advance(n) {\r\n    template = template.substring(n);\r\n  }\r\n\r\n  // 返回生成的ast；root包含整个树状结构信息\r\n  console.log('AST', root)\r\n  return root;\r\n}\r\n","export function generate(ast) {\r\n    console.log(ast)\r\n}","import { parse } from \"./parse\";\r\nimport { generate } from \"./codegen\";\r\nexport function compileToFunctions(template) {\r\n  // 1. 把template转成AST语法树；AST用来描述代码本身形成树结构，不仅可以描述html，也能描述css以及js语法\r\n  let ast = parse(template);\r\n\r\n  // 2. 优化静态节点\r\n  // 这个有兴趣的可以去看源码  不影响核心功能就不实现了\r\n  //   if (options.optimize !== false) {\r\n  //     optimize(ast, options);\r\n  //   }\r\n\r\n  // 3. 通过ast，重新生成代码\r\n  // 我们最后生成的代码需要和render函数一样\r\n  // 类似_c('div',{id:\"app\"},_c('div',undefined,_v(\"hello\"+_s(name)),_c('span',undefined,_v(\"world\"))))\r\n  // _c代表创建元素 _v代表创建文本 _s代表文Json.stringify--把对象解析成文本\r\n  let code = generate(ast);\r\n\r\n  // 通过new Function生成函数\r\n  let renderFn = new Function(`with(this){return ${code}}`);\r\n  return renderFn;\r\n}\r\n","export function mountComponent(vm,el) {\r\n    console.log('挂载节点到页面')\r\n}","/**\r\n * initMixin\r\n * 表示在vue的基础上做一次混合操作\r\n */\r\nimport { initState } from \"./state\";\r\nimport { compileToFunctions } from './compiler/index'\r\nimport { mountComponent } from './lifecycle'\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // this指向实例\r\n    const vm = this;\r\n    vm.$options = options; // 后面会对options进行扩展\r\n\r\n    // 初始化状态，包括initProps、initMethod、initData、initComputed、initWatch等\r\n    initState(vm);\r\n\r\n    // 如果有el属性 进行模板渲染\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    // $mount 由vue实例调用，所以this指向vue实例\r\n    const vm = this;\r\n    const options = vm.$options;\r\n    el = document.querySelector(el);\r\n\r\n    /**\r\n     * 1. 把模板转化成render函数\r\n     * 2. 执行render函数，生成VNode\r\n     * 3. 更新时进行diff\r\n     * 4. 产生真实DOM\r\n     */\r\n    // 可以直接在options中写render函数，它的优先级比template高\r\n    if (!options.render) {\r\n      let template = options.template;\r\n\r\n      // 如果不存在render和template但是存在el属性，则直接将template赋值为el元素\r\n      if (!template && el) {\r\n        template = el.outerHTML;\r\n      }\r\n\r\n      // 最终需要把tempalte模板转化成render函数\r\n      if (template) {\r\n        // 将template转化成render函数\r\n        const render = compileToFunctions(template);\r\n        options.render = render;\r\n      }\r\n    }\r\n\r\n    // 将当前组件实例挂载到真实的el节点上面\r\n    return mountComponent(vm, el);\r\n  };\r\n}\r\n","import { initMixin } from \"./init\"\r\n\r\nfunction Vue(options) {\r\n    // new Vue创建实例时会调用_init()方法\r\n    this._init(options)\r\n}\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","call","ob","__ob__","inserted","slice","observeArray","Observer","data","defineProperty","value","enumerable","writable","configurable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newVal","initState","vm","opts","$options","props","initData","computed","watch","_data","proxy","source","newValue","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","parse","template","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","handleStartTag","element","push","handleEndTag","pop","length","handleChars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","start","end","attr","name","n","console","log","generate","ast","compileToFunctions","code","renderFn","Function","mountComponent","el","initMixin","Vue","_init","options","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}
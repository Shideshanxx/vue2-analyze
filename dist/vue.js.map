{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\r\n    return typeof val === 'function'\r\n}\r\n\r\nexport function isObject(val) {\r\n    return typeof val === 'object' && val !== null\r\n}","// arrayMethods是继承自Array.prototype，不直接修改Array.prototype，不污染Array.prototype\r\nlet oldArrayPrototype = Array.prototype\r\nexport let arrayMethods = Object.create(oldArrayPrototype)\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'unshift',\r\n    'shift',\r\n    'sort',\r\n    'reverse',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function(...args) {\r\n        const result = oldArrayPrototype[method].call(this,...args) // this指向调用该方法的data（即经过响应式处理的数组）\r\n\r\n        // 对于数组中新增的元素，也需要进行监控\r\n        const ob = this.__ob__;\r\n        let inserted;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case \"splice\":\r\n                inserted = args.slice(2);\r\n            default:\r\n                break;\r\n        }\r\n        // inserted是个数组，需要调用observeArray来监测\r\n        if (inserted) ob.observeArray(inserted);\r\n        return result\r\n    }\r\n})","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n/**\r\n * 数据劫持：\r\n * 1. 如果是对象，则递归对象所有属性，进行劫持\r\n * 2. 如果数组，则会劫持数组方法（方法中如果是新增元素，会劫持新增元素），并对数组中类型为数组/对象的元素进行劫持\r\n */\r\n\r\nclass Observer {\r\n  // 通过new命令生成class实例时，会自动调用constructor()，即会执行this.walk(data)方法\r\n  constructor(data) {\r\n    // 在数据data上新增属性 data.__ob__；指向经过new Observer(data)创建的实例，可以访问Observer.prototype上的方法observeArray、walk等\r\n    // 所有被劫持过的数据都有__ob__属性（通过这个属性可以判断数据是否被检测过）\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      //  值指代的就是Observer的实例\r\n      value: this,\r\n      //  设为不可枚举，防止在forEach对每一项响应式的时候监控__ob__，造成死循环\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true,\r\n    });\r\n\r\n    /**\r\n     * 思考一下数组如何进行响应式？\r\n     * 和对象一样，对每一个属性进行代理吗？\r\n     * 如果数组长度为10000，给每一项设置代理，性能非常差！\r\n     * 用户很少通过索引操作数组，我们只需要重写数组的原型方法，在方法中进行响应式即可。\r\n     */\r\n    if (Array.isArray(data)) {\r\n      // 数组响应式处理\r\n\r\n      // 重写数组的原型方法，将data原型指向重写后的对象\r\n      data.__proto__ = arrayMethods;\r\n\r\n      // 如果数组中的数据是对象，需要监控对象的变化\r\n      this.observeArray(data);\r\n    } else {\r\n      // 对象响应式处理\r\n      this.walk(data);\r\n    }\r\n  }\r\n  observeArray(data) {\r\n    // 【关键】递归了，监控数组每一项（observe会筛选出对象和数组，其他的不监控）的改变，数组长度很长的话，会影响性能\r\n    // 【*********】数组并没有对索引进行监控，但是对数组的原型方法进行了改写，还对每一项（数组和对象类型）进行了监控\r\n    data.forEach((item) => {\r\n      observe(item);\r\n    });\r\n  }\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => {\r\n      // 对data中的每个属性进行响应式处理\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n  observe(value); // 【关键】递归，劫持对象中所有层级的所有属性\r\n  // 如果Vue数据嵌套层级过深 >> 性能会受影响【******************************】\r\n\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      // todo...收集依赖\r\n      return value;\r\n    },\r\n    set(newVal) {\r\n      // 对新数据进行观察\r\n      observe(newVal);\r\n      value = newVal;\r\n      // todo...更新视图\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 如果是object类型（对象或数组）才观测；第一次调用observe(vm.$options._data)时，_data一定是个对象，官方要求的写法（data函数返回一个对象）\r\n  if (!isObject(data)) {\r\n    return;\r\n  }\r\n  // 如果已经是响应式的数据，直接return\r\n  if (data.__ob__) {\r\n    return;\r\n  }\r\n  // 返回经过响应式处理之后的data\r\n  return new Observer(data);\r\n}\r\n","/**\r\n * 数据初始化：initProps、initMethod、initData、initComputed、initWatch\r\n */\r\n\r\nimport { observe } from \"./observer/index\";\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.props) {\r\n    initProps(vm);\r\n  }\r\n  if (opts.methods) {\r\n    initMethod(vm);\r\n  }\r\n  if (opts.data) {\r\n    // 初始化data\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm);\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n\r\n  function initProps() {}\r\n  function initMethod() {}\r\n  function initData(vm) {\r\n    let data = vm.$options.data;\r\n    // 往实例上添加一个属性 _data，即传入的data\r\n    // vue组件data推荐使用函数 防止数据在组件之间共享\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n    // 将vm._data上的所有属性代理到 vm 上\r\n    for (let key in data) {\r\n      proxy(vm, \"_data\", key);\r\n    }\r\n    // 对数据进行观测 -- 数据响应式\r\n    observe(data);\r\n  }\r\n  function initComputed() {}\r\n  function initWatch() {}\r\n\r\n  // 将vm._data上的属性代理到 vm 上\r\n  function proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n      get() {\r\n        return vm[source][key];\r\n      },\r\n      set(newValue) {\r\n        vm[source][key] = newValue;\r\n      },\r\n    });\r\n  }\r\n}\r\n","export function compileToFunctions(template) {\r\n    console.log('template',template)\r\n}","/**\r\n * initMixin\r\n * 表示在vue的基础上做一次混合操作\r\n */\r\nimport { initState } from \"./state\";\r\nimport { compileToFunctions } from './compiler/index'\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // this指向实例\r\n    const vm = this;\r\n    vm.$options = options; // 后面会对options进行扩展\r\n\r\n    // 初始化状态，包括initProps、initMethod、initData、initComputed、initWatch等\r\n    initState(vm);\r\n\r\n    // 如果有el属性 进行模板渲染\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    // $mount 由vue实例调用，所以this指向vue实例\r\n    const vm = this;\r\n    const options = vm.$options;\r\n    el = document.querySelector(el);\r\n\r\n    /**\r\n     * 1. 把模板转化成render函数\r\n     * 2. 执行render函数，生成VNode\r\n     * 3. 更新时进行diff\r\n     * 4. 产生真实DOM\r\n     */\r\n    // 可以直接在options中写render函数，它的优先级比template高\r\n    if (!options.render) {\r\n      let template = options.template;\r\n\r\n      // 如果不存在render和template但是存在el属性，则直接将template赋值为el元素\r\n      if (!template && el) {\r\n        template = el.outerHTML;\r\n      }\r\n\r\n      // 最终需要把tempalte模板转化成render函数\r\n      if (template) {\r\n        // 将template转化成render函数\r\n        const render = compileToFunctions(template);\r\n        options.render = render;\r\n      }\r\n    }\r\n\r\n    // 将当前组件实例挂载到真实的el节点上面\r\n    return mountComponent(vm, el);\r\n  };\r\n}\r\n","import { initMixin } from \"./init\"\r\n\r\nfunction Vue(options) {\r\n    // new Vue创建实例时会调用_init()方法\r\n    this._init(options)\r\n}\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","call","ob","__ob__","inserted","slice","observeArray","Observer","data","defineProperty","value","enumerable","writable","configurable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newVal","initState","vm","opts","$options","props","initData","computed","watch","_data","proxy","source","newValue","compileToFunctions","template","console","log","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML","mountComponent"],"mappings":"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"}